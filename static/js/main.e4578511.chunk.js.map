{"version":3,"sources":["components/JsonForm.module.css","UI/Card.module.css","components/Navbar.module.css","UI/Card.js","store/index.js","components/JsonForm.js","components/Navbar.js","components/Plan.js","App.js","reportWebVitals.js","index.js","components/Plan.module.css"],"names":["module","exports","Card","props","className","classes","card","children","planSlice","createSlice","name","initialState","Submitted","PlanName","General","Physiotherapy","cost","counter","reducers","createPlan","state","action","payload","planName","submitForm","store","configureStore","reducer","plan","planActions","actions","JsonForm","error","formateerror","over","isduplicated","dispatch","useDispatch","textref","useRef","useSelector","prevname","console","log","useState","duplicated","setDuplicated","formatE","setFormateE","wrong","setWrong","isOver","setIsOver","textObject","jform","onSubmit","event","preventDefault","JSON","parse","current","value","e","undefined","htmlFor","type","id","ref","Navbar","Plan","setPlan","general","setGeneral","phy","setPhy","setCost","obj","useEffect","prev","item1","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4578511.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"jform\":\"JsonForm_jform__BG88S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2nKG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__GcM95\"};","import React from 'react'\r\nimport classes from './Card.module.css'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className={classes.card}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card","import {createSlice, configureStore} from '@reduxjs/toolkit'\r\n\r\nconst initialPlanState = {Submitted: false,PlanName: '',General: '', Physiotherapy: '', cost: '',counter:0}\r\n\r\nconst planSlice = createSlice({\r\n    name:'plan',\r\n    initialState: initialPlanState,\r\n    reducers: {\r\n        createPlan(state, action) {\r\n            state.PlanName = action.payload.planName\r\n            state.General = action.payload.General\r\n            state.Physiotherapy = action.payload.Physiotherapy\r\n            state.cost = action.payload.cost\r\n            state.counter ++\r\n        },\r\n        submitForm(state) {\r\n            state.Submitted = true\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: {plan: planSlice.reducer}\r\n})\r\n\r\nexport const planActions = planSlice.actions\r\nexport default store","import {React, useState, useRef} from 'react'\r\nimport classes from './JsonForm.module.css'\r\nimport Card from '../UI/Card'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { planActions } from '../store'\r\n\r\nconst JsonForm = () => {\r\n    const dispatch = useDispatch()\r\n    const textref = useRef()\r\n    const counter = useSelector(state => state.plan.counter)\r\n    const prevname = useSelector(state => state.plan.PlanName)\r\n    console.log(counter)\r\n    let error\r\n    let formateerror\r\n    let over\r\n    let isduplicated\r\n    const [duplicated, setDuplicated] = useState(false)\r\n    const [formatE, setFormateE] = useState(false)\r\n    const [wrong, setWrong] = useState(false)\r\n    const [isOver, setIsOver] = useState(false)\r\n    const textObject = {}\r\n    const onSubmitHandler = (event) => {\r\n        setFormateE(false)\r\n        setWrong(false)\r\n        setDuplicated(false)\r\n        event.preventDefault()\r\n        try {\r\n            JSON.parse(textref.current.value)\r\n        } catch(e) {\r\n            setFormateE(true)\r\n            console.log(textObject)\r\n            return\r\n        }\r\n        const {planName, General, Physiotherapy, cost} = JSON.parse(textref.current.value)\r\n        console.log(planName,General,Physiotherapy,cost)\r\n        if (!planName || General === undefined || Physiotherapy === undefined || !cost) {\r\n            setWrong(true)\r\n            return\r\n        }\r\n        if (counter > 2) {\r\n            setIsOver(true)\r\n            return\r\n        }\r\n        if (planName === prevname) {\r\n            setDuplicated(true)\r\n            return \r\n        }\r\n        dispatch(planActions.submitForm())\r\n        dispatch(planActions.createPlan({\r\n            planName,\r\n            General,\r\n            Physiotherapy,\r\n            cost\r\n    }))\r\n    } \r\n    if (wrong === true) {\r\n        error = <h2>Please enter valid value again</h2>\r\n    } else {\r\n        error = null\r\n    }\r\n    if (formatE === true) {\r\n        formateerror = <h2>Please input valid JSON format</h2>\r\n    } else {\r\n        formateerror = null\r\n    }\r\n    if (isOver === true) {\r\n        over = <h2>The custome Plan limit is 3 sorry</h2>\r\n    } else {\r\n        over = null\r\n    }\r\n    if (duplicated === true) {\r\n        isduplicated = <h2>There is already the same plan</h2>\r\n    } else {\r\n        isduplicated = null\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form className={classes.jform} onSubmit={onSubmitHandler}>\r\n        <label htmlFor='plan'>Customize your own plan</label>\r\n        <textarea type='text' id='plan' ref={textref}>\r\n            &#123;\"planName\":\"\",\r\n            \"General\":,\r\n            \"Physiotherapy\":,\r\n            \"cost\": &#125;\r\n        </textarea>\r\n        <button>Submit</button>\r\n        {formateerror}\r\n        {error}\r\n        {over}\r\n        {isduplicated}\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JsonForm","import React from 'react'\r\nimport classes from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={classes.Navbar}>\r\n            <ul>\r\n                <li>Plan Demo</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport classes from './Plan.module.css'\r\nimport Card from '../UI/Card'\r\n\r\nconst Plan = () => {\r\n    let [plan,setPlan] = useState([])\r\n    let [general,setGeneral] = useState([])\r\n    let [phy,setPhy] = useState([])\r\n    let [cost,setCost] = useState([])\r\n    const obj = useSelector(state => state.plan)\r\n    useEffect(() =>{\r\n    if(obj.PlanName)\r\n    setPlan(prev => [...prev, obj.PlanName])\r\n    setGeneral(prev => [...prev, obj.General])\r\n    setPhy(prev => [...prev, obj.Physiotherapy])\r\n    setCost(prev => [...prev, obj.cost])\r\n    console.log(general)\r\n    }, [obj.PlanName])\r\n    \r\n   \r\n    return (\r\n        <Card>\r\n            <h1>Choose a plan</h1>\r\n            <div className={classes.PlanName}>\r\n            <div className={classes.item1}>\r\n                    <ul>\r\n                        <li></li>\r\n                    </ul>\r\n                    <ul>\r\n                        {plan.map(item => <li>{item}</li>)}\r\n                    </ul>\r\n                </div>\r\n                <div className={classes.item1}>\r\n                    <ul>\r\n                        <li>General</li>\r\n                    </ul>\r\n                    <ul>\r\n                        {general.map(item => item === true? <li>true</li>: <li>false</li>)}\r\n                    </ul>\r\n                </div>\r\n                <div className={classes.item1}>\r\n                    <ul>\r\n                        <li>Physiotherapy</li>\r\n                    </ul>\r\n                    <ul>\r\n                        {phy.map(item => item === true? <li>true</li>: <li>false</li>)}\r\n                    </ul>\r\n                </div>\r\n                <div className={classes.item1}>\r\n                    <ul>\r\n                        <li>Cost</li>\r\n                    </ul>\r\n                    <ul>\r\n                        {cost.map(item => <li><input type='checkbox'/>${item}/month</li>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Plan","import './App.css';\nimport JsonForm from './components/JsonForm'\nimport Navbar from './components/Navbar';\nimport Plan from './components/Plan'\nimport {useSelector} from 'react-redux'\n\nfunction App() {\n  const obj = useSelector(state => state.plan)\n  console.log(obj)\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <JsonForm />\n      {obj.Submitted == true && <Plan />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/index'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlanName\":\"Plan_PlanName__36-Rt\",\"item1\":\"Plan_item1__PF6Mn\",\"item\":\"Plan_item__1GGFP\"};"],"sourceRoot":""}